{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"Category Description Nano Essentially tweets (eXcreta perhaps nowadays?), i.e. short off-the-cuff observations and comments. Micro Short form text, either stand-alone or as part of the process of conversion to long-form (aka Macro) pieces. Usually less than 5 minutes to read. Macro Fully fleshed out long-form essays, &gt;10 min. reads. Projects Commentary/Brainstorming/WIP on various projects before they merit a dedicated github repo. Tech Reference posts with up-to-date information on my technology environment..."},{"location":"#recent-posts","title":"Recent Posts","text":""},{"location":"#long-term-investing-risks-buckets-and-assets","title":"Long Term Investing (Risks, Buckets and Assets)","text":""},{"location":"#my-python-environment","title":"My Python Environment","text":""},{"location":"#my-emacs-configuration","title":"My Emacs Configuration","text":""},{"location":"misc/about/","title":"About This Site","text":""},{"location":"misc/about/#why-is-the-site-named-flirting-with-neutrality","title":"Why Is The Site Named Flirting with Neutrality?","text":"<p>Many (many) years ago, my hour-long daily commute time was taken up listening to  CNBC's Squawk Alley morning market coverage (yes, in the car, we DID have satellite radio in those days ;-).  When markets were essentially unchanged (or flat in the vernacular), Bertha Coombs opined once that markets were \"flirting with neutrality\".</p> <p>I noted this wonderful aphorism at the time and it came back to me in our current climate. In my case, it succinctly describes a predilection to holding socially liberal but economically conservative views. Thus, not easily fitting anywhere on the classic Republican-Democratic spectrum (albeit leaning heavily small and large \"D\" democratic for the majority of policy issues).</p> <p>Thus, Flirting With Neutrality it is!</p>"},{"location":"misc/about/#why-now","title":"Why now?","text":"<p>I've never \"blogged\" before but upon retirement and watching the world go by, this seems as good a time as any to get started.</p>"},{"location":"misc/about/#about-me","title":"About Me","text":"<p>My Detailed Resum\u00e9/Curriculum Vitae</p>"},{"location":"misc/about/#platforms","title":"Platform(s)","text":"<p>I tried Nikola, Hugo, Pelican and Jekyll but either couldn't \"grok\" their mental models (or got caught in Ruby, gem, bundle installation hell for you_know_who).</p> <p>Conversely, Publii gave me a wonderful user-interface to edit content (in either various Markdown editors) and create a site interactively. However, this makes particular automation tasks essentially impossible.</p> <p>MkDocs represents the perfect balance between enough granularity to create a customised site while staying at a command-line and editing with Emacs.</p>"},{"location":"misc/cv/","title":"Resum\u00e9 &amp; Work History","text":"<p>This listing of a reminder to myself and family (Dad, what did you do?) of all the various projects and positions I've held and projects I've participated in over my 35 year working history, before I forget them!</p> <p>As best as I can piece together, this is my complete work history.</p>"},{"location":"misc/cv/#professional-experience","title":"Professional Experience","text":""},{"location":"misc/cv/#2011-2017-technical-software-director-energy-solutions-oakland-ca","title":"2011-2017: Technical Software Director, Energy Solutions, Oakland CA","text":"<ul> <li>Consulting and Development Services:</li> <li>Architect and principal developer of firm\u2019s first commercial product, specifically on behalf of nationwide utility rebate incentive processing (<code>Python</code>).</li> <li>Integrated client requirements, data collection and service needs in development and maintenance of public reporting environments for California Distributed Generation, Solar Initiative Thermal Program, and Renewable Portfolio Standard (<code>Python</code>, <code>Redis</code>, <code>Django</code>).</li> <li> <p>Developed data collection platform for PG&amp;E\u2019s Share My Data &amp; performance dashboards for PG&amp;E\u2019s Automated Demand Response program (<code>Python</code>).</p> </li> <li> <p>Corporate Services:</p> </li> <li>Developed firm\u2019s first comprehensive Policy &amp; Procedure documentation for software development and operation.</li> <li>Managed firm\u2019s first successful SOC-2 Type-1 audit and supported on-going Type 2 audits.</li> <li>Designed and deployed firm\u2019s first comprehensive project &amp; corporate risk framework.</li> <li>Managed software engineering teams of various sizes (2-8), all DevOps and Corporate IT.</li> </ul>"},{"location":"misc/cv/#2006-2011-director-global-it-axa-rosenberg-orinda-ca","title":"2006-2011: Director, Global IT, AXA Rosenberg, Orinda CA","text":"<ul> <li>Responsible for global data centers, global network, disaster recovery/business continuity, release management and QA for 400+ employee, $40B institutional asset manager.</li> <li>Sole developer of internal configuration management, security tracking and KPI environment (<code>Python</code> on <code>Django</code> with <code>ExtJS</code>, <code>SQL Server</code> and <code>memcached</code>). Extensive use of WMI for host-based scanning and <code>FusionCharts</code> for dashboards.</li> </ul>"},{"location":"misc/cv/#2005-2006-director-of-software-engineering-cogency-software-burlingame-ca","title":"2005-2006: Director of Software Engineering, Cogency Software, Burlingame CA","text":"<ul> <li>Responsible for engineering, management for VC-backed software firm developing software for the alternative investment industry.</li> <li>Core projects include transitioning engineering staff from a platform to a domain-specific product focus; evaluation, selection and implementation of an off-shore development center; product management, design and client implementations of Portfolio Insight, a portfolio reporting &amp; performance attribution system.</li> </ul>"},{"location":"misc/cv/#2001-2005-chief-information-officer-fisher-investments-woodside-ca","title":"2001-2005: Chief Information Officer, Fisher Investments, Woodside CA","text":"<ul> <li>Responsible for software development and technology management on behalf of a 650-employee high-net worth investment adviser.</li> <li>Core development projects:</li> <li>Individually developed a custom client reporting system for both institutional and retail clients using <code>Python</code>, <code>ReportLab</code>, <code>Win32</code>, <code>SQL Server</code> &amp; <code>MySQL</code> (generated over 13,000 individual account statements per quarter).</li> <li>Individually developed and deployed a rule-driven institutional compliance guideline system (<code>Python</code>).</li> <li>Designed, developed &amp; deployed firm\u2019s first corporate intranet (<code>Python</code>, <code>Zope</code>).</li> <li>Deployed a predictive dialer for warm and cold-call lead generation by internal sales force.</li> <li>Deployed off-shore lead entry &amp; validation system.</li> <li>Designed web-based dedicated CRM portal for external sales force.</li> <li>Designed &amp; deployed a dedicated appointment management solution for both internal and external sales forces.</li> <li>Created algorithmic lead evaluation and allocation mechanism.</li> <li>Designed custom document management solution integrated into <code>Onyx</code> CRM system (<code>FileNet</code>).</li> <li>Designed a custom trade blocking/unblocking mechanism for extreme number of separate accounts.</li> <li>Successful deployment of a third-party trade order management system.</li> </ul>"},{"location":"misc/cv/#2000-2001-chief-technology-officer-mifund-inc-san-francisco-ca","title":"2000-2001: Chief Technology Officer, MiFund Inc., San Francisco CA","text":"<ul> <li>Responsible for all technology management and product development, spanning corporate strategy to day-to-day tactical support and product development.</li> <li>Specified, designed, developed and deployed a SAAS web-based mutual fund processing platform. Targeted to financial advisors of large European financial institutions and incorporated mutual fund research, portfolio management, trading and settlement (<code>ATGDynamo</code>, <code>Java</code>, <code>Python</code> and <code>Oracle</code> on <code>Sun Solaris</code>).</li> <li>Developed and managed all internal corporate infrastructure, data, voice and email on a global basis (California, Ireland and Paris).</li> <li>Extensive support of company and product marketing as well as venture funding process.</li> </ul>"},{"location":"misc/cv/#1994-2000-blackrock-san-francisco-ca","title":"1994-2000: Blackrock, San Francisco CA","text":"<p>(aka Barclays Global Investors [BGI], Wells Fargo Nikko Investment Advisors [WFNIA], BZW Investment Management)</p> <ul> <li>Director, BGI E-Competency Center</li> <li> <p>Responsible for all strategic technology surrounding all \"e-initiatives\", both internally and externally focused. Encompassed evangelism, technology evaluation, strategic corporate direction, strategic IT architecture and management of BGI's \"B-Garage\", an internally funded product and technology incubation environment.</p> </li> <li> <p>Technology Manager, Capital Markets</p> </li> <li>Responsible for global technology management for the Capital Markets business unit of BGI. Unit managed over $30B of equity and fixed income instruments on loan and representing a significant portion of BGI's profits at the time.</li> <li>Position encompassed:<ul> <li>Management, architecture and support of all application development</li> <li>Strategic technology direction</li> <li>Project management</li> <li>Budget, audit and risk management technology across the globally distributed business unit</li> <li>Coordination with all technology infrastructure groups across other regional business units</li> </ul> </li> <li> <p>Primary Projects:</p> <ul> <li>Development a replacement to a global Securities Lending system in Tenfold Corporation's Universal Application Architecture (along with <code>C</code>, <code>Perl</code>, <code>Sybase</code>, Web and TibCo's <code>Rendezvous</code>).</li> <li>Designed and implemented BGI's first company-wide utilisation of XML as part of a project to convert $300B of custodial services from Morgan Stanley Trust Company to Chase Manhattan Bank (<code>Perl</code> and <code>Java</code>).</li> <li>Deployed a Cash Trading System to other BGI offices globally using both a standalone/project architecture and a real-time replication architecture using <code>Sybase' Replication Server</code>.</li> </ul> </li> <li> <p>Manager Information Technology</p> <ul> <li>Managed 12 developers across 5 application development teams, reported to CIO but centered   around Capital Markets Business Unit. Developed and managed core technology strategy, i.e. software architecture, project planning, business case development and shepherding and budgeting across:</li> <li>Securities Lending &amp; Money Market Trading desks</li> <li>Derivatives Trading</li> <li>Foreign Exchange Trading</li> <li>Risk Management</li> <li>Compliance and Regulatory Reporting</li> <li>Pioneered use of messaging middleware in development of real-time trading and risk management systems.</li> </ul> </li> <li> <p>Senior Trading Liason, Equity &amp; Fixed Income Trading</p> <ul> <li>Responsible for all first-line software and hardware support of fixed-income and equity trading desks.</li> <li>Managed group of 4 developers responsible for all fixed-income and equity trading desk software.</li> <li>Primary Projects:</li> <li>Researched, sold and managed install of the Teknekron (TibCo) Information Bus market data and messaging software platform.</li> <li>Jointly designed and developed core trading floor software architecture, i.e. application integration, user shell environments, project and change control standards etc. Complete migration from multiple stand-alone PC's per trading a single Sun workstation.</li> <li>Managed, designed and developed first electronic workflow transfer of trading order from portfolio management to trading environment at BGI (<code>Perl</code>, <code>C</code>, <code>Tcl/Tk</code> on Sun Solaris)</li> </ul> </li> </ul>"},{"location":"misc/cv/#1991-1994-manager-financial-application-development-tibco-palo-alto-ca","title":"1991-1994: Manager, Financial Application Development, TibCo, Palo Alto CA","text":"<ul> <li> <p>Managed developers responsible for all trader workstation software deployed on the Teknekron Information Bus. Responsible for product design, customer interaction, development, testing and production of the Trader Workstation (Sun <code>SPARCStations</code>, <code>X11</code>, <code>C</code>).</p> </li> <li> <p>Provided custom consulting for trading floor re-engineering for Goldman Sachs, Montgomery Securities, Salomon Bros., Credit Suisse and Tokai Bank.</p> </li> </ul>"},{"location":"misc/cv/#1990-1991-technical-project-manager-senior-software-engineer-make-systems-mountain-view-ca","title":"1990-1991: Technical Project Manager &amp; Senior Software Engineer, Make Systems, Mountain View  CA","text":"<ul> <li> <p>Lead the development of a dedicated Field Sales Support Tool for Metromedia/ITT. System supported the creation and analysis of quotes and proposals for long-distance telecommunications services using high-speed optical scanning and optical-character-recognition/OCR (<code>IBM MS-DOS</code> &amp; <code>C</code>).</p> </li> <li> <p>Designed, implemented and tested enhanced mathematical models of telecommunication network design optimisation and clocking for a T1-network management decision support tool (Sun SPARCStation &amp; <code>C</code>).</p> </li> </ul>"},{"location":"misc/cv/#1984-1990-senior-software-consultant-decision-focus-inc-los-altos-ca","title":"1984-1990: Senior Software Consultant, Decision Focus Inc., Los Altos CA","text":"<ul> <li> <p>Marketed and designed a decision-support system for irregular operations and strategic vessel deployment for Sea-Land Corporation (<code>Oracle</code> on <code>Sun SPARCstations</code>, <code>C/C++</code>).</p> </li> <li> <p>Marketed, designed and developed a history-based forecasting system for Pacific &amp; Asia operation of Sea-Land Corporation to support a division-wide distributed logistics system (IBM <code>370/MVS</code>, <code>SAS</code>).</p> </li> <li> <p>Designed, developed and transferred strategic and tactical optimisation models for fleet, schedule, operations and sales planning for United Airlines. Strategic models used to evaluate number fleet acquisitions and M&amp;A opportunities. Yield management systems deployed for daily operations across United's entire schedule (IBM <code>370/MVS</code>, <code>SAS</code>, <code>FORTRAN</code>).</p> </li> <li> <p>Aided in the database selection and design of a distributed yield-management system for the Hertz Corporation (IBM <code>DB2</code>, <code>OS/2</code>, <code>FORTRAN</code> &amp; <code>C</code>).</p> </li> <li> <p>Developed a decision-support tool for the evaluation of modifications to fossil fuel power plants. Funded by the Electric Power Research Institute (aka EPRI), tool was used to evaluate $23M (current $) worth of plant modifications for the Duke Power Company (IBM <code>PC/MS-DOS</code>, <code>Oracle</code>, <code>C</code>).</p> </li> <li> <p>Received 1989 Technical Achievement Award for superior performance and excellence in the use of Relational Database Management Systems in the development of advanced decision-support systems.</p> </li> </ul>"},{"location":"misc/cv/#1983-management-information-systems-analyst-nasa-ames-research-center-moffett-field-mountain-view-ca","title":"1983: Management Information Systems Analyst, NASA Ames Research Center, Moffett Field, Mountain View CA","text":""},{"location":"misc/cv/#1982-laboratory-driver-pathology-laboratory-los-gatos-ca","title":"1982: Laboratory Driver, Pathology Laboratory, Los Gatos CA","text":""},{"location":"misc/tags/","title":"Tags","text":""},{"location":"misc/tags/#bayesian","title":"bayesian","text":"<ul> <li>Meta-Knowledge</li> </ul>"},{"location":"misc/tags/#bonds","title":"bonds","text":"<ul> <li>Long Term Investing</li> </ul>"},{"location":"misc/tags/#economics","title":"economics","text":"<ul> <li>Accrual vs Cash</li> </ul>"},{"location":"misc/tags/#emacs","title":"emacs","text":"<ul> <li>My Emacs Configuration</li> </ul>"},{"location":"misc/tags/#government","title":"government","text":"<ul> <li>Accrual vs Cash</li> </ul>"},{"location":"misc/tags/#history","title":"history","text":"<ul> <li>Meta-Knowledge</li> </ul>"},{"location":"misc/tags/#just","title":"just","text":"<ul> <li>Just vs Makefiles</li> </ul>"},{"location":"misc/tags/#knowledge","title":"knowledge","text":"<ul> <li>Meta-Knowledge</li> </ul>"},{"location":"misc/tags/#make","title":"make","text":"<ul> <li>Just vs Makefiles</li> </ul>"},{"location":"misc/tags/#mutual-funds","title":"mutual funds","text":"<ul> <li>Long Term Investing</li> </ul>"},{"location":"misc/tags/#projects","title":"projects","text":"<ul> <li>Long Term Investing</li> </ul>"},{"location":"misc/tags/#python","title":"python","text":"<ul> <li>My Python Environment</li> </ul>"},{"location":"misc/tags/#retirement","title":"retirement","text":"<ul> <li>Long Term Investing</li> </ul>"},{"location":"misc/tags/#risk","title":"risk","text":"<ul> <li>Long Term Investing</li> </ul>"},{"location":"misc/tags/#risk-management","title":"risk management","text":"<ul> <li>New on New</li> </ul>"},{"location":"misc/tags/#stocks","title":"stocks","text":"<ul> <li>Long Term Investing</li> </ul>"},{"location":"posts/macro/","title":"Macro","text":""},{"location":"posts/macro/#long-term-investing-risks-buckets-and-assets","title":"Long Term Investing (Risks, Buckets and Assets)","text":"<p>A short set of material on personal investing, focused on long-term (aka \"retirement\") planning and implementation.</p>"},{"location":"posts/macro/investing/","title":"Long Term Investing (Risks, Buckets and Assets)","text":"<p>A short set of material on personal investing, focused on long-term (aka \"retirement\") planning and implementation.</p> <p>A few years ago, I attended a meeting of my local chapter of the American Association of Individual Investors (aka AAII) where Christine Benz of Morningstar (a popular mutual fund rating organisation) presented the concept of money \"buckets\". It was literally a head-slap moment that completely clarified the uncertainty I had up in my head about how to categorise money going into retirement. Before I describe the concept, let's back-track a bit to your (potentially) younger age.</p>","tags":["projects","bonds","stocks","mutual funds","retirement","risk"]},{"location":"posts/macro/investing/#young-you","title":"Young You","text":"<p>At 25 to 30 years old, you're probably starting to think about \"putting\" money away for retirement-purposes (either because your firm offers 401k matching or someone's convinced/badgered you into opening your own IRA account). If you've gotten to this point, you're probably earning enough monthly income to (a) cover your monthly expenses, (b) have at least 6-12 months of income socked away on a readily available basis for either expected or unexpected future expenses (saving for a car/home down payment, unexpected medical bills etc.).</p> <p>At this point, in some sense, you're already implementing a \"bucket\" strategy implicitly. Your cash account (eg.\u00a0checking) serves as your most immediate, readily available cash for monthly expenses. The funds you're saving away in the second category are (or at least should be) in something that makes a bit of interest but may be a \"transfer\" away from daily usage (eg.\u00a0a savings account, a money-market account at a brokerage etc.). Finally, any funds you're planning on putting away for retirement are a new third category, definitely not something you'll access (excepting significant emergency where the penalties are justified).</p> <p>Thus, we can think about these categories along two axes: </p> <ul> <li> <p>First, how available/liquid are the funds when you expect to need them? (ie.\u00a0your checking account is supremely liquid for use on a weekly/monthly basis relative to a 3-month CD where your money is locked away for, well.../3/ months!) </p> </li> <li> <p>Then, when are you planning to need them? (eg. a car purchase in 18 months?, home down-payment in 36 months? etc.)</p> </li> </ul> <p>As we'll see below, the when question becomes critical in determining the appropriate investment allocations.</p> <p>Technically, we could consider these three categories as \"buckets\" already but I don't think it's worthwhile at a young age (in fact, the bucket concept was created for retirees!). Thus, for now, your 27.5 year old self should simply consider any funds you invest in an IRA/401K as a single chunk (even if spread across accounts, vendors, assets etc.) that you won't pull from for decades.</p> <p>Now, an interesting thing happens once you start getting close to considering actual retirement (whenever that might be)....you've probably spent decades essentially forgetting about your retirement accounts and simply hope they've grown at least as well as the \"market\" (and no worse than everyone else's retirement accounts!). When you start thinking to yourself \"Hmmmm...maybe I do want to retire soon? When can I?...\", treating that single chunk of retirement money as single chunk is no longer appropriate.</p> <p>Why not?</p> <ul> <li> <p>You won't have any more \"standard\" job-income! Thus, the years (decades) of expecting $X per month direct deposited to your checking account are no more! I know this sounds rather obvious but I can say from experience that the first few months/quarters of this can be extremely unnerving.</p> </li> <li> <p>Thus, since you'll have to start relying on that single chunk of money you've squirreled away for decades, it's not enough to simply \"invest and forget\" for decades, you'll need another way of thinking about those funds. That's what the bucket model/concept can help with.</p> </li> </ul>","tags":["projects","bonds","stocks","mutual funds","retirement","risk"]},{"location":"posts/macro/investing/#older-you-needs-buckets","title":"\"Older You\" Needs Buckets!","text":"<p>Of the many attributes of the formal Bucket system (formal and capitalised now!) is that in some ways, it is a mirror of the way you had to categorise money in your younger years, ie. we'll still categorise money by liquidity and planning horizon but with one critical difference -&gt; your income is going to come from your retirement funds instead of an outside source (ie. your old job(s)).</p> <p>So, what's my formal definition of the Bucket system? It's a way of formally thinking about your assets in categories (aka buckets) with a set of very well defined attributes.</p>","tags":["projects","bonds","stocks","mutual funds","retirement","risk"]},{"location":"posts/macro/investing/#bucket-1","title":"Bucket 1","text":"<p>Most similar to your younger-self, Bucket 1 represent all your most liquid funds, readily available at a moments notice for weekly/monthly living. It's from Bucket 1 that you pay your mortgage, car payment, credit-card bills, insurance etc. Due to Bank/S&amp;L marketing decisions, this will most likely be a checking account that pays you diddly, thus you want to minimise the amount of money that you keep in this bucket! However, if money is only going out of this Bucket, where does it come from?</p>","tags":["projects","bonds","stocks","mutual funds","retirement","risk"]},{"location":"posts/macro/investing/#bucket-2","title":"Bucket 2","text":"<p>Bucket 2 is the newest part of the retirement \"mindset\", it's purpose is to generate enough income on a monthly basis that you can replenish Bucket 1 as necessary. In some ways, you can consider this the replacement for your former employment, except that income thrown \"off\" assets in Bucket 2 become your source of monthly/annual living expenses. So what \"assets\" does this entail? Essentially anything that throws of income and is of reasonably low volatility (we'll read more about volatility below). Examples include (but are not limited to):</p> <ul> <li>Money market accounts</li> <li>Bond funds (part. those that aim to maximise interest while staying in reasonably high-quality bonds).</li> <li>High dividend paying stocks</li> </ul> <p>Your goal here is to create as large a Bucket 2 balance as necessary to fund your planned Bucket 1 expenses. Depending on how much you've saved over the decades, Bucket 2 may represent your entire retirement savings.</p> <p>However, even in the situation where Bucket 2's income just meets (or doesn't even) meet your Bucket 1 spending requirements, there's still a reason for Bucket 3...however, we'll need a small bit of esoteric history for why.</p> <p>When Social Security was enacted 87 years ago, the average life expectancy in the US was a bit over 60 years. Beside the political/sociological observation that a full retirement age of 65 would only be expected to be met by half of the population born that year (and even less by those born earlier!), the more salient statistic is that if you were born in 1960, your current average life expectancy is almost 70 (and if college-educated, non-smoker etc., significantly higher than that!). For many of us, Bucket 2 won't last long enough (by throwing off income and using up principal), hence the need for Bucket 3.</p>","tags":["projects","bonds","stocks","mutual funds","retirement","risk"]},{"location":"posts/macro/investing/#bucket-3","title":"Bucket 3","text":"<p>Bucket 3 is the closest analogue to what a new retiree previously considered their \"retirement\" account(s) (401K's, IRA's, Roth's, etc.). It's meant for the long-term and thus, can incur a significantly larger amount of volatility with the promise of larger return than that could be expected from the income-producing assets of Bucket 2. </p> <p>What would go into Bucket 3? In short, stocks. Over almost every period over the last century, analyses have shown that a well-diversified group of high-quality growth stocks will out-perform income-producing (ie.\u00a0savings/ CD / bond) assets. Thus, unless you have a reasonably short life-expectancy, or even if your Bucket 2 is not sufficient to replenish Bucket 1, you should set at least a little aside for long-term appreciation in Bucket 3. Now, here's where wisdom has changed completely over the last decade...time for another historical side-trip.</p> <p>The \"classic\" retirement planning model of late last century (70's through the 90's) was \"straightforward\": invest as long and as aggressively as you can in stocks (long-term gains) while you're working and then \"convert\" to bonds as soon as you retire to provide you income on which to live. This model is still reasonably prevalent in many people's minds but suffers from two critical issues:</p> <ul> <li> <p>The first was mentioned above...we're living longer! If you retired in (say) 1985 at age 65, you were born in 1920 and thus had a average life expectancy of 53 years...individuals just making it to 65 were to be congratulated! (1920 was a particular bad year to be born from a life expectancy perspective ;-()</p> </li> <li> <p>How do you \"convert\" from stocks to bonds? Your income goes from something to essentially nothing (Social Security excepted) so the classic model was simply sell your stocks and buy bonds/bond funds. However, what if you happened to retire in the summer of 1982, 2002 or even 2009? ie.\u00a0years in which the S&amp;P 500 incurred drops of more than 25%...Can you imagine investing for decades, only to have the value of your \"retirement\" savings drop by more than a quarter within a single year?</p> </li> </ul> <p>These two factors have caused a major rethink of financial planning professionals, specifically to start \"migrating\" out of stocks years earlier before you retire (not a problem) and keep stocks a bit longer after you retire (Bucket 3!). While the classic model has it's simplicity, there is no similar clear model today..the closest I know of is the Bucket model (which I argue is a meta-investing or financial management model!).</p> <p>Back to Bucket 3, you might ask, how do I use Bucket 3? In some sense, you'll know...ie.\u00a0once you start significantly drawing down your Bucket 2, look for good opportunities to gradually sell some Bucket 3 assets and re-invest these in Bucket 2 assets/accounts.</p> <p>Aside: It's shame that the standard is to start from Bucket 1, visually, I picture Bucket 3 (or 4) at the \"top\" and money flowing down over years and months to Bucket 2 (and from Bucket 2 to Bucket 1)...alas, that's not how it was formulated ;-)</p>","tags":["projects","bonds","stocks","mutual funds","retirement","risk"]},{"location":"posts/macro/investing/#bucket-summary","title":"Bucket Summary","text":"<p>Finally, I suggest one critical addition to the bucket strategy if it's relevant to you: the addition of any/all real estate equity you might hold. I consider this equity as Bucket 4, it makes sense as it's (usually) less liquid than even stock investments (ie. it has similar \"timing\" issues of when to sell as stocks but the logistics of selling real estate are way harder than entering a Sell order on your Broker's iPhone app!).</p> <p>So let's summarise the buckets:</p> Bucket Purpose Investing Time Frame Planned Volatility Availability 1 Immediate spending Weeks to Months None! Immediate (&lt;2 days) 2 Income generation Months to few years Small (+/-5%?) Weeks 3 Asset growth Few years to decades Medium to large (+/- 25%) Months 4 Real Estate Decades \" Years <p>To read more about Buckets (their definition and sample portfolios), I recommend going directly to the source:</p> <ul> <li> <p>The Bucket Approach to Building a Retirement Portfolio</p> </li> <li> <p>Our Best Investment Portfolio Examples for Savers and Retirees</p> </li> </ul>","tags":["projects","bonds","stocks","mutual funds","retirement","risk"]},{"location":"posts/macro/investing/#-intermission-","title":"- Intermission -","text":"<p>At this point, we'll switch from how to conceptually think about retirement money (in the most general sense over your lifetime) to the actual logistics of what to invest in (and where), helping you understand a different way of thinking about \"risk\" as well as some insights into the current state of the financial services industry. Good time for a break.</p>","tags":["projects","bonds","stocks","mutual funds","retirement","risk"]},{"location":"posts/macro/investing/#your-secret-advantage-risk","title":"Your Secret Advantage \u2799 \"Risk\"","text":"<p>Fundamentally, the industry's definition of risk is NOT the same as yours and mine, ie. as individuals. Let's start with a short primer.</p> <p>In modern finance (defined as the last 50 or so years), the general definition of <code>risk</code> is the degree to which the price of something (say, a stock or mutual fund) changes more \"extremely\" than the average of all the other similar somethings.</p> <p>Simply put, if the price of an asset goes down (say 10%) when all other assets of the same type only go down 5%, the asset is considered more \"risky\" (by a factor of 2). From a purely statistical perspective, risk in this context can be considered simply the ratio of the standard deviation of an asset to general standard deviation of all other similar assets. For example, a stock with a standard deviation of 4 relative to a standard deviation of all similar stocks of 2 is considered to be twice as risky (this is also expressed as it having higher <code>volatility</code>).</p> <p>This definition has become absolutely, completely ingrained in modern finance and has thus trickled down to personal finance as well. However, I completely reject the notion that this is an appropriate definition of risk for individuals!!</p>","tags":["projects","bonds","stocks","mutual funds","retirement","risk"]},{"location":"posts/macro/investing/#alternative","title":"Alternative?","text":"<p>Based on my early experience in Decision Analysis (yes, 30+ years ago but the concepts are evergreen), I define risk as <code>the probability that you will (or won't) get the outcome you want at the time you want it</code>. That sounds rather simplistic and in some ways it is. However, when we apply this to personal investing (particular vis-a-vis retirement funding) it's a fundamentally different perspective than just thinking about how volatile the price of an asset is.</p> <p>Let's do a thought experiment. You're 25 years old and want to start investing your IRA/401k for your retirement in 40 years. You can pick between two assets to invest in (an asset being anything you can purchase that you hope goes up in value):</p> <ul> <li> <p>Asset 1 is expected to return about 5% per year on a long-term average and will only change in price at most 30% per year, ie.\u00a0the maximum it might go up or down in a volatile year is 30%.</p> </li> <li> <p>Asset 2 is expected to return about 10% per year on a long-term average but is might go up or down by 50% in any given year.</p> </li> </ul> <p>In modern finance, Asset 2 is considered significantly more \"risky\" than Asset 1 (and thus, will have all the various warnings and signatures required to \"make sure you know what you're getting into\")</p> <p>However, what's critical here is to decide the following: What really is our goal? Is it to make a particular amount of money every year? eg. the mean return we should expect of the respective asset? Or something else??</p> <p>I contend that our long-term savings pile should be thought of like an old-school cookie-jar; the type we used to stash money into for a rainy-day (except our rainy day is 40 years on!). Here are some \"assumptions\" about old-school cookie-jars (well, maybe from the Ozzie &amp; Harriet days but stick with me...):</p> <ul> <li> <p>The money in the cookie-jar was used on behalf of a particular purchase at some (rough) time in the future.</p> </li> <li> <p>The cookie jar was opaque. Thus, on any given day, whoever is managing that cookie jar will NOT be opening it just to make sure everything's still there.</p> </li> <li> <p>However, if someone has borrowed money from the jar, it was assumed that over some reasonable period of time, they'd replace the money, perhaps with a bit of extra for good measure.</p> </li> </ul> <p>Let's make some observations:</p> <ul> <li> <p>The opaqueness of the jar was fundamental to it's operation...during the period that someone borrowed money from jar, no one else probably knew!</p> </li> <li> <p>We didn't/don't expect that the cookie-jar will be magically \"growing\" every time period, it might go down as borrowing occurs, it might not grow as funds are tight or it might get large as (ir)regular deposits are made!</p> </li> </ul> <p>So, what are the analogues to retirement investing from the cookie-jar analogy?</p> <p>Thus, our goal is not to achieve a particular percent return in any/every given year, rather it's to ensure that 40 years later, when you look at the balance, it's not only all there but has also significantly grown in value!</p> <p>Put another way: whether or not the asset goes up or down every year is almost immaterial as long as when the funds are necessary, they're available (and bigger!) Thus, the definition of risk in this context is: After 40 years, (a) Will the money that I've invested still \"be there\"? (b) Will it have earned a significant enough return to compensate me for locking it away relative to the other things I could have done?</p> <p>Let's look at this from the context of Assets 1 and 2 from above. If we invest in Asset 2 (and don't open the cookie jar (aka your retirement account) very often to spare your heart), you'll SIGNIFICANTLY lower your risk by increasing the chances of meeting your goal relative to Asset 1 as the probability of having a significantly larger account balance is far higher with Asset 2 over the 40 year time span. Thus, the nominally \"higher\" risk asset from the industry perspective is actually a less risky asset for your retirement portfolio!</p> <p>So what makes this possible?</p> <ul> <li> <p>Time-frame...note the comment above re. \"over the 40 year time span\". It's this perspective that places the individual investor in a completely different &amp; unique position from that of investment and/or money managers whose performance is evaluated every quarter! Unless your significant other threatens to stop using your own money management services every few years, you have a completely different time horizon than those who'd manage your money for you. Put another way, every investment/money manager can be fired due to bad performance...thus, their investing horizon is by definition shorter than ours. This distinction is the only advantage/weapon individuals can bring to the investing war-zone (and we need all the help we can get ;-).</p> </li> <li> <p>Statistics is fundamental to making this possible...unless you've completely messed up analysing the expected return &amp; volatility of an asset, the statistics of long-term return vv short-term volatility will always work out in your favor.</p> </li> </ul>","tags":["projects","bonds","stocks","mutual funds","retirement","risk"]},{"location":"posts/macro/investing/#aside-always-consider-who-how-you-are-paying","title":"Aside: Always Consider Who &amp; How You are Paying","text":"<p>Before we discuss how to take advantage of this dichotomy through what to invest in, we need a short aside regarding the finance industry. Fundamentally, someone is ALWAYS trying to take advantage of you in personal finance &amp; investing space. While you are officially a/the customer (not like Meta or Google), financial service provider's interests are NOT aligned with yours (I'll cover the very few exceptions below).</p> <p>Take hedge funds for example, some of the richest people in the country today became so not because they invested their own money so much better than anyone else but because they convinced enough people/institutions that they could invest better than anyone else. Thus, by hovering up billions of dollars to manage and billing for services on a percentage of the money you manage, 1.5% of a billion dollars every year adds up to significant money!</p> <p>Long-winded way of saying that virtually every party you deal with in the space is trying to make money from you...while the obvious take-away is minimise said payments, you first have to understand how those payments are made/structured! We'll consider these below when we discuss various types of services and investable assets.</p> <p>It's critical to keep this understand this in mind as we discuss what and how to populate your buckets.</p>","tags":["projects","bonds","stocks","mutual funds","retirement","risk"]},{"location":"posts/macro/investing/#assets","title":"Asset(s)","text":"<p>I've been using the term asset (instead of stock or bond) both intentionally and rather loosely up to this point. While an asset in this context could be an individual stock or bond, the mathematics don't work for the long time horizons due to the known and unknown unknowns that affect individual companies. From unexpected legal liability, market structure changes, technology changes, critical management changes, there are too many ways for any single company to not be able to out-perform the market on a decades-long basis.</p> <p>Just staying in business as a viable entity can be a challenge over a 40 year time-span, here are the firms the constituted the Dow Jones Industrial index 40 years ago: DJI August 1982. How many of these firms do you even recognise today? If you randomly invested in any one of these firms back then (when I started putting pocket-change into my 401k), what are the chances that they still exist today in anything like their current form? What are the chances that they'd still be making enough profit to justify continued out-performance of their stock price? Remember that this was almost 20 years before the introduction of behemoths like Apple, Microsoft, Amazon, Google and 35 years before Tesla!</p> <p>Thus, while I've railed against modern finance's definition of risk, the converse pillar of modern finance, ie. diversification, is still absolutely fundamental.</p> <p>If you can't rely upon investing in a small set of individual stocks, what are your options? You could manually manage a larger set of individual stocks. While I don't have the math at and, old-school wisdom is that you need at least 8 but preferably 15 to 20 highly diversified stocks to make up a robust portfolio. So, first you have to pick 'em...then you have to monitor them (lawsuits? crooked CEO, someone else eat-their-lunch?)...then you have to decide (at least yearly) whether or not to keep 'em.</p> <p>To my mind, this approach is explicitly contradictory to the cookie-jar perspective (the essence of which is to stuff money into it and look at it as seldom as possible).</p> <p>So, instead of doing it yourself, you can pay someone to manage one or many set of stocks on your behalf. Now we get into the domain of money managers, there are several choices here that I'll group into two general buckets and mention (for fun) a third, probably unusable option.</p> <ul> <li>Collective Investment Vehicles, eg. Mutual Funds, ETF's etc.</li> <li>Separately Managed Investment Accounts, eg. bespoke money managers.</li> <li>\"Hedge\" Funds </li> </ul>","tags":["projects","bonds","stocks","mutual funds","retirement","risk"]},{"location":"posts/macro/investing/#collective-investment-vehicles","title":"Collective Investment Vehicles","text":"<p>Invented in the 1970's, the collective investment vehicle (aka mutual fund) was a radical (nee socialist?) concept at the time. In essence, a set of stocks where purchased and held in a single account, shares of this account where then created and sold to (mostly individual) investors, the value of these mutual fund shares was directly linked to the total value of the underlying account holding the actual stocks! Any income (aka dividends) generated by the underlying stock was transferred to the investors as well.</p> <p>Such a structure provides several critical advantages. First, it immediately provides far more diversification (the set of stocks is usually above 20 but could be in the 100's) from the vagaries of any single stock. Second, it also allowed low-budget investing since the mutual fund shares could be priced significantly lower than even purchasing a single share of 1 or 2 individual stocks (this was particularly true in the 70's and 80's when the difficulty and cost of individuals buying shares was non-trivial). Finally, economies of scale play strongly as mutual fund's cost structures usually do not rise linearly with the amount of assets they manage, leading to prices (aka fees) that are much more market-sensitive (but still very consistent across competitors!).</p> <p>Not only did mutual funds open up investing \"to the masses\", they represented the basis for the transition from retirees getting paid based on their final salary (so called Defined Benefit plans) to individuals being responsible for managing their own retirement savings (Defined Contribution plans).</p> <p>So, mutual funds sound great relative to managing your own portfolio, what's the catch?</p> <ul> <li> <p>You are paying for their service (99% of mutual fund companies are for-profit entities and have made some billionaires on the backs of you and I over the years!). How much are we talking? Most mutual funds today charge you somewhere around 0.5% to 1.5% of your assets every year to manage your money. On absolute terms, this doesn't sound like much (on a $50,000 nest egg, we're talking about $250 to $750 annually). However, there are two critical factors at play here: first, this is every year, ie. whether or not they've made you money (or more accurately done at least as well as the general market) and second, the magic of compounding means that every dollar that isn't part of the compounding cycle plays a massive role in total size of your nest egg decades down the line. I won't go into the math of why this is so (a simple calculator that illustrates it) but will only say that every single penny that decide to invest should take part in said investment plan!...ie.\u00a0if there's any place to be a cheap-skate, this is it!!</p> </li> <li> <p>\"The Plethora Problem\"....Since mutual funds get paid irrespective of how well they perform, the mutual fund game isn't one of returns but much more akin to industries that can't really differentiate their products physically (bottled water anyone?), ie.\u00a0it's all marketing. To say there are a \"plethora\" of mutual funds is an understatement...the combinatorics of how many ways you can select (say 30) stocks from a universe of roughly 4000+ \"real\" stocks (ie, that trade on an exchange) is 3 x 10^38^. As of this writing, there are over 7,000 individual mutual funds available to purchase in the US, note that this is more than the number of actual underlying stocks! Thus, you want a mutual fund that only invests in medium-size companies whose headquarters are in the mid-west, specialises in manufacturing nuts and bolts and whose company name starts in the early part of the alphabet?....we've got a fund for that!! (well, the company name part is only a bit of a stretch, the rest is perfectly logical in today's market).</p> </li> </ul> <p>I'll address the actual decision of mutual fund selection below (preview, it's not as hard as it seems).</p>","tags":["projects","bonds","stocks","mutual funds","retirement","risk"]},{"location":"posts/macro/investing/#smas-or-separately-managed-investment-accounts","title":"SMA's or Separately Managed Investment Accounts","text":"<p>So, why are mutual funds called \"collective\" investment vehicles? When you own a mutual fund, you own shares of it, from a book-keeping perspective this looks just like owning shares of a stock, ie. 20 shares of Apple vs.\u00a020 shares of Mutual-Fund-X. The money with which you've purchased your mutual fund shares is grouped or \"collected\" together by the mutual fund company to purchase the underlying/actual stock shares of the fund, hence the \"collective\" moniker.</p> <p>Separately management investment accounts are much more \"as they say\", ie. you have an investment account (say at a brokerage) that can you use to buy and sell stocks. However, unlike managing this process yourself, you hire (and thus, pay) someone (or a company) to manage this account specifically and separately on your behalf. You're money stays at the brokerage and is not pooled with anyone else's. Thus, instead of a statement that says you own 20 shares of Mutual-Fund-X (that might represent 32 underlying stocks that you share ownership of with 10,000's of other individuals), your statement is simply a list of stocks that your investment manager has selected on your behalf.</p>","tags":["projects","bonds","stocks","mutual funds","retirement","risk"]},{"location":"posts/macro/investing/#advantages","title":"Advantages","text":"<p>When the person (or small company) is managing an account for you, you have essentially infinite customisation possible (well, at least within the bounds of that individual's recommendations, otherwise why are you paying them!). A classic example of this is an employee of a large, publicly-traded company (let's use Apple as an example). This employee may have a reasonable amount of their wealth coming due in options on Apple shares. If they invest their other savings in a mutual fund that happens to already hold a large proportion of shares in Apple, a large degree of diversification goes away (hypothetical case, the DOJ declares Apple a monopoly which cuts it stock in half, both the mutual fund and his options go down at exactly the same time). With a separately managed account, the individual could tell their manager \"buy what you think is best but not any Apple as I already 'own' it in some sense\". Whether it's called personalisation or customisation, this capability is inherently not possible due to the collective nature of mutual fund!</p>","tags":["projects","bonds","stocks","mutual funds","retirement","risk"]},{"location":"posts/macro/investing/#disadvantages","title":"Disadvantages","text":"<p>You might think the fee structure for this type of management would place it out of range for normal, individual investors. However, the majority of these advisors (or companies that provide this service) charge 1% to 1.5%, not significantly more than mutual funds! So you might ask, why don't more investors go down this route? Multiple factors are at play here:</p> <p>The technical ability to scale this business is a significant challenge, leaving SMA's primarily offered by individual/small group practitioners or a small number of very large brokerage firms/banks that have invested in the technical capability to offer this (picture managing 1000's of individual portfolios, each with their own specific nuances, preferences and constraints on a consistent, accurate basis).</p> <p>Thus, the selection process is akin to finding and selecting a dentist, ie.\u00a0word-of-mouth, small-scale advertising etc. However, unlike a dentist, if your investment manager up and retires (or dies), you have a larger problem on your hands!</p>","tags":["projects","bonds","stocks","mutual funds","retirement","risk"]},{"location":"posts/macro/investing/#hedge-funds","title":"\"Hedge\" Funds","text":"<p>For sake of completeness, let's also include a short description of so-called \"hedge\" funds. If you have many millions of liquid wealth just hanging around (and/or are just supremely greedy), you can use the highest tier of money management. \"Hedge\" funds are small, collective investment vehicles that are managed as if they were separate investment accounts (ie. by hand).</p> <p>What sets them apart from either mutual funds or SMA's are that they can invest in essentially anything around the world (llama farms in Peru? sure...micro-loan companies in Bangladesh, why not? oodles of repackaged mortgage investments in US residential real estate with futures exposure for an extra kicker? but of course!).</p> <p>The Securities and Exchange Commission has determined that such freedom may not be in the best interest of the average investor, thus, hedge funds are limited to only accepting funds from so-called \"accredited investors\", aka those who have enough other money that if/when the brown stuff hits the ventilator, they won't go crying to the SEC that they we're bamboozled! Thus, minimum investment amounts usually start at $500k along with a minimum net worth of $2-3M.</p> <p>Why is this category interesting? Besides the fact that you hear about them often (and that they've created billionaires), the fees are not outlandish relative to other categories above. Base management fees usually range from 1.75% to 2.5%. However, also included are \"sweeteners\" to increase the degree to which the managers have skin-in-the-game. Usually, these sweeteners are implemented as performance fees, ie. some % of all gains by a hedge fund each year are \"kept\" by the investment managers based on the performance of the respective fund you're invested in.</p> <p>Usually set at 20%, performance fees are the real reason high-level individuals at hedge funds can become very rich, very quickly. For example, a classic hedge fund fee structure is called \"2 and 20\", ie.\u00a0if your investment of $1M goes to $1.1M in a year, (for a $100k or 10% gross gain), you'll first pay a 2% management fee of $22k (2% of $1.1M) and then 'give' 20% of the $100k gain back to the hedge fund, thus netting only $80K of that gain. This would leave you with $1.058M (a return of only 5.8% net of fees) while the management company pockets $42k from you! Nice gig eh?</p>","tags":["projects","bonds","stocks","mutual funds","retirement","risk"]},{"location":"posts/macro/investing/#to-do","title":"TO DO","text":"<ul> <li>[ ] Asset Allocation, ie. how do you think about a \"mix\" of assets in a bucket?</li> <li>[ ] What's the difference between ETF's and\u00a0Mutual Funds?</li> <li>[ ] Role of Vanguard, particularly vis-a-vis TIAA-CREF.</li> </ul>","tags":["projects","bonds","stocks","mutual funds","retirement","risk"]},{"location":"posts/micro/","title":"Micro","text":""},{"location":"posts/micro/#new-on-new","title":"New on New","text":"<p>When combining more than one new resource with another one. Resources could be almost anything, i.e. people, technology, processes etc.</p>"},{"location":"posts/micro/#accrual-vs-cash-accounting-in-federal-spending-discourse","title":"Accrual vs. Cash Accounting in Federal Spending Discourse","text":"<p>In listening to the debates recently regarding both the historical tax cut of the Trump administration against the various COVID relief acts and a potential infrastructure bill, I noticed that we conflate the argument by not distinguishing between two fundamentally different ways of looking at money flows.</p>"},{"location":"posts/micro/accrual_vs_cash/","title":"Accrual vs. Cash Accounting in Federal Spending Discourse","text":"<p>In listening to the debates recently regarding both the historical tax cut of the Trump administration against the various COVID relief acts and a potential infrastructure bill, I noticed that we conflate the argument by not distinguishing between two fundamentally different ways of looking at money flows.</p> <p>While not usually used on behalf of government spending, distinguishing between the potential intent or obligation to spend money in future vs. the actual flow of cash on behalf of that spending is illustrative. Specifically, in the context of government spending:</p> <ul> <li>Accrual accounting recognises either the intent or permission of the administrative branch of the US government to spend money on a planned basis.</li> <li>Cash accounting tracks actual cash movements.</li> </ul> <p>From this, we can distinguish several salient points:</p>","tags":["economics","government"]},{"location":"posts/micro/accrual_vs_cash/#legislative-spending-is-an-accrual-basis-concept","title":"Legislative Spending is an Accrual Basis Concept","text":"<p>Legislation that stipulates spending should be thought of on an accrual basis, i.e. while the intent of the legislative branch may be to spend funds for a specific program, there are several issues that may keep that spending from actually occurring. For example, programs may not ramp up as quickly as planned, future legislation might pull the spending back etc.</p> <p>For example, as of this moment 2020 Relief Act stipulated the availability of $2.08 trillion through a combination of direct payments, delayed or wholly deferred taxes and agency spending. However, even by October 2020, a significant portion of these funds had not been spent. <sup>1</sup></p> <p>Just because a spending bill is enacted doesn't imply directly that the cash necessary for it will actually be \"spent\". In some ways, legislative spending is like an option, providing the administrative branch an intent and right or permission to spend but is not able to explicitly force it to do so.</p>","tags":["economics","government"]},{"location":"posts/micro/accrual_vs_cash/#treasury-operations-are-a-cash-basis-concept","title":"Treasury Operations are a Cash Basis Concept","text":"<p>When we speak of deficit spending, we simply mean that the cash required for government spending is more than that available from tax receipts or existing cash reserves. Thus, the Treasury must borrow money from the private sector by selling US Government debt obligations (bills, notes and bonds) to raise the requisite cash.</p> <p>This is almost tautologically a cash accounting concept. While the Federal Reserve can (to some degree), \"manufacture\" new money, the Treasury is only able to provide cash to agencies through tax receipts and borrowing if necessary.</p>","tags":["economics","government"]},{"location":"posts/micro/accrual_vs_cash/#what-happens-when-we-mix-the-two-concepts","title":"What Happens When We Mix the Two Concepts?","text":"<p>When the Republican Party criticized the $1.9 trillion 2021 American Rescue Plan <sup>2</sup> by decrying the impact on the Federal deficit, it's being disingenuous at best. As described above, assuming that \"proposed\" spending (on an accrual basis and that may not actually occur) will immediately imply the need to raise more cash (on an cash basis) is simply not true.</p> <p>In fact, the Trump administration treasury left the Biden administration a massive pile of cash ($1 trillion<sup>3</sup>) that will significantly ameliorate the need for the Treasury to add more to the deficit to implement actual spending associated with the American Rescue Plan!</p>","tags":["economics","government"]},{"location":"posts/micro/accrual_vs_cash/#tldr","title":"TL;DR;","text":"<p>Don't imply that additional government spending will impact the US deficit as you're conflating accrual  versus cash accounting concepts.</p> <ol> <li> <p>The Federal Response to COVID-19 from datalab.usaspending.gov \u21a9</p> </li> <li> <p>American Rescue Plan of 2021 \u21a9</p> </li> <li> <p>How Trump\u2019s team amassed a $1 trillion war chest for Biden to deploy \u21a9</p> </li> </ol>","tags":["economics","government"]},{"location":"posts/micro/new_on_new/","title":"New on New","text":"<p>When combining more than one new resource with another one. Resources could be almost anything, i.e. people, technology, processes etc.</p>","tags":["risk management"]},{"location":"posts/micro/new_on_new/#what-are-some-examples","title":"What are Some Examples?","text":"<ol> <li>Pairing a brand new technology stack with a brand-new project.</li> <li>Pairing a newly-hired employee under a newly-hired supervisor/manager.</li> <li>Pairing a brand new project manager onto a new and/or high-risk project.</li> </ol>","tags":["risk management"]},{"location":"posts/micro/new_on_new/#suggestions","title":"Suggestions?","text":"<p>With some context as risk manager (both formally and informally, I suggest never getting into the New on New scenario. You're incurring significantly more risk than is absolutely necessary by compounding the risk of the relevant project, initiative or team.</p> <p>Let's look at the examples above in more detail:</p> <ol> <li> <p>A new software project almost always utilises new and/or unproven technologies (even existing &amp; proven technologies in the outside world may be completely new to the respective team).</p> </li> <li> <p>This is somewhat easier...don't assign a new employee to a new supervisor. Either on-board a new employee with an experienced supervisor/manager or place a newly-hired supervisor/manager on a team with existing experience in company operations.</p> </li> <li> <p>Similarly, a new project manager should be assigned to low-risk and/or small projects initially (company's project management standards, policies and procedures vary too much for an external individual to immediately on-board into a situation requiring them to hit-the-ground running).</p> </li> </ol>","tags":["risk management"]},{"location":"posts/micro/new_on_new/#when-you-have-no-choice-but-to-do-new-on-new","title":"When You Have No Choice But To Do New on New","text":"<p>In cases where you really can't get out of it, there are mitigation strategies possible based on the scenario.</p> <ul> <li>New technologies should be learned, vetted and tested as early as possible in a project/initiative. This should include sample implementations (including deployment to as semi-production environments to evaluate deployment issues).</li> </ul> <p>Thus, respective project tasks and associated time must be explicitly identified and allocated to these efforts. The time required might be no more than a few hours for a new language library to person-weeks or months for a complex new addition (for example, moving from an RDBMS to a NoSQL document-store database or using a completely new implementation language).</p> <p>I recommend breaking these cases into the following buckets:</p> Case Definition Low Up to a person-day's work all in. Examples include: swapping a logging library, changing to a third-party datetime library, etc. Medium Up to a person-week's work. Examples include: moving from one database/caching platform to another (SQLServer to PostgresQL, memcached to Redis, etc.), using another new Javascript UI framework etc. High Up to a person-month's work. Examples include: using a new implementation language (Python to Go/Rust), developing a complex Javascript-based web UI for the first time etc. <ul> <li> <p>Someone must be responsible for on-boarding new supervisors/supervisees. Mitigation strategies include:</p> <ul> <li> <p>Relying on the existence of or creating explicit standards, policies and/or procedures documentation before-hand. If both individuals have reference documentation for both their roles/responsibilities and how perform them, a significant amount of risk and uncertainty can be reduced.</p> </li> <li> <p>Ultra-frequent check-ins. This is not a situation where a weekly or monthly manager check-in is sufficient. Daily or twice-daily check-ins from an even more senior manager (or anyone with significant experience of the department or team) is critical to making sure the individuals ramp-up as quickly as possible and reducing errors.</p> </li> </ul> </li> <li> <p>Similar to the example above, a strongly/clearly documented project management approach and procedures can go a long way to make sure a new project manager on-boards as quickly as possible while still being effective at their role on a new, high-risk project. If these aren't available, strong and frequent mentoring is critical to making sure the project doesn't go 'off the rails'.</p> </li> </ul>","tags":["risk management"]},{"location":"posts/micro/new_on_new/#tldr","title":"TL;DR;","text":"<p>Net net, New on New simply adds more risk than it's worth. Don't do it unless you absolutely have OR have explicitly mitigated the risk involved.</p>","tags":["risk management"]},{"location":"posts/nano/","title":"Nano","text":""},{"location":"posts/nano/#just-vs-makefiles","title":"\"Just\" vs. Makefiles","text":"<p>After spending another 10 minutes trying to figure out more Makefile idiosyncrasies just to try and automate (and document) both oft and seldom issued commands, I recently found and decided to give the Just command-line runner a try.</p>"},{"location":"posts/nano/just_vs_makefiles/","title":"\"Just\" vs. Makefiles","text":"<p>After spending another 10 minutes trying to figure out more Makefile idiosyncrasies just to try and automate (and document) both oft and seldom issued commands, I recently found and decided to give the Just command-line runner a try.</p> <p>The Just package took less than 10 minutes to understand what was necessary to change my complex Makefile to a far-simpler <code>justfile</code>.</p> <p>TL;DR; -&gt; Why has it taken me so long to find this! If you don't need to worry about dependencies, unreservedly recommended.</p>","tags":["make","just"]},{"location":"posts/nano/just_vs_makefiles/#sample-justfile","title":"Sample <code>justfile</code>","text":"<p>Here is the automation file that I used to build a previous implementation of my site (specifically, with Hugo):</p> <pre><code># Setup local variables\nCONTENT    := justfile_directory() + \"/content\" # (1)!\nDEPLOY     := justfile_directory() + \"/deploy\"\nCOMMIT_TAG := `date \"+%Y-%m-%dT%H:%M:%S\"`\n\n\n# This list of available targets # (2)\ndefault: # (3)\n@just --list\n\n# Build local content *and* deploy to public github repo.\ndeploy: build push  # (4) \n\n# Build local content to public directory.\nbuild:\n@echo \"Generating site...\" # (5)\n@cd {{CONTENT}} &amp;&amp; hugo --quiet --minify --gc --cleanDestinationDir -d {{DEPLOY}}  # (6)\n@cp {{CONTENT}}/CNAME {{DEPLOY}}\n\n# Commit current version of local public directory and push to github.\npush:\n    #!/usr/bin/env fish  # (7)\necho \"Committing and pushing to github...\"\ncd {{DEPLOY}} &amp;&amp; git add --all .                 &gt;git.log 2&gt;&amp;1\ncd {{DEPLOY}} &amp;&amp; git commit -m \"{{COMMIT_TAG}}\" &gt;&gt;git.log 2&gt;&amp;1\ncd {{DEPLOY}} &amp;&amp; git push -u origin main        &gt;&gt;git.log 2&gt;&amp;1\n\n# Run a local server (including drafts).\nserver:\n@cd {{CONTENT}} &amp;&amp; hugo server --buildDrafts --disableFastRender # (8)\n</code></pre> <ol> <li> <p>You can have local variables to represent common strings within the <code>justfile</code> (I treat them like shell variables). Similarly, there are a set of <code>just</code> specific methods, here, I'm getting the directory containing the <code>justfile</code> itself.</p> </li> <li> <p>A comment above a target will be the contents of the respective \"help\" command (see sample execution below).</p> </li> <li> <p>The <code>default</code> target will be executed when no target is specified on the invocation of <code>just</code>. In this case, we simply list the commands available in this <code>justfile</code>.</p> </li> <li> <p>To execute other targets, simply list them! In this case, a <code>deploy</code> action is actually composed of a <code>build</code> followed by a <code>push</code> target.</p> </li> <li> <p>The <code>@</code> symbol doesn't display the text of the command executed.</p> </li> <li> <p>Good example of running a command in another directory (there's no state carried from one command-line to the next).</p> </li> <li> <p>Commands can be run using any interpreter! Here, I'm using fish to take advantage of redirecting both <code>stdout</code> and <code>stderr</code> to the same file.</p> </li> <li> <p>Commands don't have to \"end\", here, the hugo server will continue to run until a CTRL-C.</p> </li> </ol> <pre><code>$ just\nAvailable recipes:\nbuild   # Build local content to public directory.\ndefault # This list of available targets\ndeploy  # Build local content *and* deploy to public github repo.\npush    # Commit current version of local public directory and push to github.\nserver  # Run a local server (including drafts).\n$ just build\n...\n</code></pre> <p>...no more <code>PHONY</code>'s!</p> <p>Now, obviously, since you're able to see the footer, you can tell I don't use Hugo anymore...thus, the need to do all the rigamorale above has gone away but <code>justfiles</code> continue to be a core component of every one of my projects.</p> <p>To see the current <code>justfile</code> used for this site, follow the github link in the upper-right corner of this page and look for <code>justfile</code> in the root directory.</p>","tags":["make","just"]},{"location":"posts/projects/","title":"Projects","text":""},{"location":"posts/projects/#the-meta-knowledge-project","title":"The \"Meta-Knowledge\" Project","text":"<p>The amount of knowledge in the world continues to expand near-exponentially. However, little discussion exists on the ability to understand knowledge at the \"meta\" level.</p>"},{"location":"posts/projects/knowledge/","title":"The \"Knowledge\" Project Brainstorming","text":"","tags":["bayesian","history","knowledge"]},{"location":"posts/projects/knowledge/#arc-of-enlightenment","title":"Arc of Enlightenment","text":"<pre><code>Data \u2192 Facts \u2192 Information \u2192 Knowledge \u2192 Insight \u2192 Wisdom\n</code></pre> <p>With thanks to Neil deGrasse Tyson (@neiltyson): Arc of Enlightenment in a rational, civilized world</p>","tags":["bayesian","history","knowledge"]},{"location":"posts/projects/knowledge/#introduction","title":"Introduction","text":"<p>The amount of \"knowledge\" in the world continues to expand near-exponentially. However, little discussion exists on the ability to understand knowledge at the \"meta\" level, addressing questions such as:</p> <ul> <li>How do we measure the quality of knowledge?</li> <li>How and why does knowledge change over time?</li> <li>Are their prescriptive notions of how knowledge should change over time?</li> <li>How do the answers to these questions vary across disciplines?</li> <li>How/where should knowledge be kept? aka Library of Alexandria vs.\u00a0S3?</li> </ul> <p>I propose that what's missing is a formal mathematical model of knowledge itself.</p> <p>By way of analogy, one of the fundamental breakthroughs in computer science in the late 70's was a conceptual and mathematical model of \"data storage\" design (i.e.\u00a0the Relational Data Model [ref Codd/Date]). This model is not a model of any particular data to be stored (e.g.\u00a0accounting ledgers, health records, CERN results) but a \"meta\" model of how to represent structured data in a way that minimized the duplication of data (and thus the operations needed to maintain it) with a rigorous mathematically consistent underpinning. Over a half-century later, the relational model is still the core meta-design model for the overwhelming amount of data held today.</p> <p>However, the relational data meta model only represents data. We distinguish information from data through either the following two precepts:</p> <ul> <li> <p>Information is data (or a derivative of data) that can or does influence an actual, real-world decision (not necessarily human) This is based on the long-standing influence of learning Decision Analysis at Stanford in the mid-80's.</p> </li> <li> <p>Information is that which affects \"knowledge\".</p> <p>Data --&gt; (analysis) --&gt; Information --&gt; (weighting) --&gt; Knowledge --&gt; (decision-making) --&gt; Decisions --&gt; (outcomes) --&gt; Data (rinse repeat)</p> <p>The weighting process step here is critical...based on new information, how to we update collective knowledge in the respective domain?</p> <p>Examples:</p> <ul> <li> <p>Given a new research paper on nutrition, do we or don't we change any of the following?:</p> <ul> <li>Our own diets?</li> <li>Recommendations to physicians obo their patients?</li> <li>Government diet recommendations?</li> </ul> </li> <li> <p>Given the torrent of research performed and published during the SARS-COV2 pandemic: how and when do we change our behaviour? what policies at the local, state and federal level make the most sense? which existing policies can/should change?</p> </li> </ul> </li> </ul> <p>For each and every paper, we must be scientifically literate enough to evaluate it's quality (as the higher the quality of research, the more strongly the collective knowledge should be updated). To determine this strength, we ask a reasonably standard list of scientific literacy questions:</p> <ul> <li>Was the hypothesis properly formulated? <sup>1</sup></li> <li>How broad was the sample set?</li> <li>What is single blind? double blind?</li> <li>Were high-quality statistics used?</li> <li>Could there be a control group? If so, was there?</li> <li>etc.</li> </ul>","tags":["bayesian","history","knowledge"]},{"location":"posts/projects/knowledge/#core-precepts","title":"Core Precepts","text":"","tags":["bayesian","history","knowledge"]},{"location":"posts/projects/knowledge/#information-is-that-which-influences-updates-existing-knowledge","title":"Information is That Which Influences (Updates) Existing Knowledge","text":"<p>Thus, information has qualities that directly determine the ability to update knowledge. For example: - Information that comes from sources that have exhibited a history of knowledge updates have a higher impact on knowledge updates. - Information that is independently corroborated has a higher impact on knowledge updates. - Information that comes from less (non?) biased sources has a higher impact on knowledge updates.</p>","tags":["bayesian","history","knowledge"]},{"location":"posts/projects/knowledge/#knowledge-is-inherently-probabilistic-and-changes-over-time","title":"Knowledge is Inherently Probabilistic and Changes Over Time","text":"<p>We used to know that the earth was flat (and that it was the center of our solar system). Essentially, everything we think we know is simply a probabilistic estimation of it's certainty (a bit like quantum mechanics can't give us the absolute location of an electron, only a probabilistic wave). Thus, as new information arises, these probabilities can change. However, we do have a formal meta-model for this -&gt; can we all say LaPlace &amp; Bayes?</p>","tags":["bayesian","history","knowledge"]},{"location":"posts/projects/knowledge/#knowledge-distribution-is-an-active-process","title":"Knowledge Distribution is an Active Process.","text":"<p>Information leading to knowledge updates can start in well-known arenas, ranging from well-known and established journals through ad-hoc research from iconoclastic individuals.</p> <p>As an example, the knowledge distribution process for general \"hard science\" topics can be described by the following:</p> <ol> <li>Individual research projects beget papers.</li> <li>Papers that meet some level of quality and/or approval are formally published in journals (albeit they might have been already distributed to PLOS/Arxiv environments).</li> <li>Publishing begets more research and more papers (for instance, at post-graduate levels).</li> <li>More papers begets discussion at the graduate education level.</li> <li>More graduate learning discussion begets codification in upper level undergraduate curricula.</li> <li>More curricula begets standardization in lower level through textbooks.</li> <li>College textbook representations beget more simplified representations in high school textbooks.</li> <li>If appropriate, knowledge from high school textbooks trickles down to junior high and middle/elementary school textbooks (at which point we'd probably consider this \"common\" knowledge from a societal perspective).</li> </ol>","tags":["bayesian","history","knowledge"]},{"location":"posts/projects/knowledge/#observations","title":"Observations","text":"<p>Based on the complexity of the respective knowledge, not all of these steps are appropriate; for example, we don't expect to teach the basics of polymerase chain reaction in middle-school [at least not yet]).</p> <p>Whether or not knowledge does trickle down is a question in and of itself (and will be discussed below). At each step in a diffusion process such as this, knowledge could \"stop\" (for various reasons, also discussed below).</p> <p>Every \"field\" has it's own unique twists and peculiarities over their specific knowledge distribution (levels of openness, different levels of \"certainty\" to be achieved before publishing, different biases from funding etc.)</p>","tags":["bayesian","history","knowledge"]},{"location":"posts/projects/knowledge/#knowledge-has-a-half-life","title":"Knowledge Has a Half-Life","text":"<p>Knowledge decays over time, irrespective of how or even if, it's actually used. For example:</p> <ul> <li> <p>Knowledge can become embedded into systems (\"essentially\" disappearing).</p> </li> <li> <p>Knowledge can simply get forgotten based on the medium in/on which it's stored and our prevalence for using easier-to-use systems (google &amp; wikipedia vs.\u00a0a physical library a la Alexandria).</p> </li> <li> <p>Most importantly, older knowledge doesn't carry it's own meta data, describing how it was formulated (what basis, what research, etc.) This inherently creates a bias against older knowledge in favour of that which has been created more recently.</p> </li> </ul>","tags":["bayesian","history","knowledge"]},{"location":"posts/projects/knowledge/#case-studies","title":"Case Studies","text":"","tags":["bayesian","history","knowledge"]},{"location":"posts/projects/knowledge/#simple-examples-in-every-day-articles","title":"Simple examples in every-day articles:","text":"<ul> <li>Diamond samples in Canada reveal size of lost continent - Canadian scientists have discovered a fragment of an ancient continent, suggesting that it was 10% larger than previously thought.</li> </ul>","tags":["bayesian","history","knowledge"]},{"location":"posts/projects/knowledge/#mental-model-building-blocks","title":"Mental Model Building Blocks","text":"<p>We posit that the following models form the intellectual basis of knowledge management meta-model, each bringing a core set of behavior (but that need to be integrated together).</p> <ul> <li> <p>For knowledge updates, Bayes' Theorem is perfectly suited. Existing knowledge is treated as our \"prior\" distribution while new information (with the appropriate weighting) is used to update this prior to come up with a new posterior, i.e.\u00a0our current/best state of knowledge.</p> </li> <li> <p>For knowledge distribution, Diffusion or percolation models are an effective way of modeling distributions across various networks.</p> </li> <li> <p>Finally, for knowledge decay, Half-life or decay models are an effective way of modeling the degree to which something disappears.</p> </li> </ul> <p>Some of these models are used in a descriptive fashion (e.g.\u00a0diffusion) while I mean some on more of a prescriptive basis (e.g.\u00a0the recommendation to manage the quality of knowledge on a probabilistic basis).</p>","tags":["bayesian","history","knowledge"]},{"location":"posts/projects/knowledge/#background","title":"Background","text":"<ul> <li>Methods and visualization tools for the analysis of medical, political and scientific concepts in Genealogies of Knowledge (Nature, 2020-03-20)</li> <li> <p>The Lindy Effect (essentially that the longer something has stayed around, the longer it will stay around).</p> </li> <li> <p>One Process | Reaction Wheel</p> </li> <li> <p>Why the Coronavirus Is So Confusing (good article on the need for (and importance of) probabilistic knowledge (indirectly).</p> </li> <li> <p>Metaculus: Pandemics a crowd-sourced probabilistic forecasting environment.</p> </li> </ul>","tags":["bayesian","history","knowledge"]},{"location":"posts/projects/knowledge/#probabilistic-modeling","title":"Probabilistic Modeling","text":"","tags":["bayesian","history","knowledge"]},{"location":"posts/projects/knowledge/#background_1","title":"Background","text":"<pre><code>Mostly a list of articles and packages for potential implementation should I ever decide to write any code to try and demonstrate these models.\n</code></pre> <ul> <li>A careful walk through probability distributions, using Python (PyCon 2020) \"In this talk, we will do more than just a random walk through probability. In particular, by using Python code as an anchor, we will explore what a probability distribution as an \"object\" is, especially in a modeling context. By the end of this talk, probability distributions, sampling (or generating data) from a probability distribution, and the basic terms of joint, conditional and marginal distributions, should be demystified for you, and you should leave with a solid working knowledge of probability to go further and deeper with Bayesian statistics beyond PyCon!\"</li> <li>Monte Carlo Simulation Engine In Python (with options trading!)</li> <li>Monte Carlo simulation in Python | Bartosz Mikulski</li> <li>Monte Carlo Simulations with Python (Part 1) - Towards Data Science</li> <li>Monte Carlo Simulation with\u00a0Python - Practical Business Python:<ul> <li>Initial Version</li> <li>Optimised Version</li> </ul> </li> <li>A Math Equation Can Help Keep You Safe from COVID-19 (fun example problem to solve probabilistically)</li> </ul>","tags":["bayesian","history","knowledge"]},{"location":"posts/projects/knowledge/#relevant-packages","title":"Relevant Packages","text":"<ul> <li>PyMC3 Documentation --- PyMC3 3.8 documentation</li> </ul> <ol> <li> <p>My favorite example of this is pharmaceutical research where the \"control\" for testing the efficacy of a potential drug is a placebo, not the best current drug treatment.\u00a0\u21a9</p> </li> </ol>","tags":["bayesian","history","knowledge"]},{"location":"posts/tech/","title":"Technology","text":""},{"location":"posts/tech/#my-python-environment","title":"My Python Environment","text":"<p>Python project setup falls into that nebulous/grey area in that (a) you don\u2019t do it often enough for it to become habit but (b) you don\u2019t want to forget your own best practice for how to do it the next time you need to!...</p>"},{"location":"posts/tech/#my-emacs-configuration","title":"My Emacs Configuration","text":"<p>I\u2019ve been happily using Emacs since 1990 (really, see some of my history at the bottom of config.org), however, only recently have I deemed my configuration suitable for public display...</p>"},{"location":"posts/tech/emacs/","title":"My Emacs Configuration","text":"<p>I\u2019ve been happily using Emacs since 1990 (really, see some of my history at the bottom of config.org), however, only recently have I deemed my configuration suitable for public display.</p> <p>While I tend to be a start Emacs fresh every morning kind-of-guy, my startup times continued to ramp-up and become rather annoying.</p> <p>Given that one of key capabilities of Emacs is Org mode, in evaluating a ground-up rebuild of my configuration, it seemed a shame not to take advantage of Org's capabilities to ease maintenance of said configuration.</p> <p>Thus, while <code>init.el</code> sets up a few initial GUI settings, bootstraps <code>use-package</code>, and loads (well, more accurately \"tangles\") config.org, 99% of my configuration can be found here:</p> <p>Config.org</p> <p>NOTE:  I am NOT an elisp programmer (to me, Emacs is a tool, ie. like my bandsaw I only do the minimum maintenance to it to allow me to build what I really want using it!). Net net, don't take my configuration as gospel; YMMV.</p>","tags":["emacs"]},{"location":"posts/tech/python/","title":"Python Environment Standards and Setup Notes","text":"<p>Python project setup falls into that nebulous/gray area in that: (a) you don't do it often enough for it to become habit and (b) you don't want to forget your own best practice for how to do it the next time you need to!</p> <p>These are my notes for the \"hows\" and \"whats\" of my python environment for reference.</p> <p>NOTE: This file represents my practice for MY projects; I make no guarantees that these are suitable for anyone else!</p>","tags":["python"]},{"location":"posts/tech/python/#philosophy","title":"Philosophy","text":"<p>There are a plethora of packages, libraries and tools to support the Python \"project\" eco-system. My philosophy around their use revolves around the following precepts:</p> <ul> <li>I use the single, best tool for the every component (even it that requires more tools!). There's been a recent focus on moving single-use tools to \"uber\" tools. For example, how many tools now allow you to manage virtualenvs as well?</li> <li>This usually implies using only the core capability of each tool (and thus, stay orthogonal and independent from other tools). For example, while Poetry can do virtualenvs, I limit it's use for package management and project builds.</li> </ul>","tags":["python"]},{"location":"posts/tech/python/#tool-set","title":"Tool-Set","text":"<p>My current toolkit is composed of the following tools:</p> <ul> <li>pyenv to manage various versions of python installed on my system.</li> <li>poetry to manage project &amp; package management (through pyproject.toml). (see Python packages with pyproject.toml and nothing else | Simon Willison\u2019s TILs)</li> <li>venv module to create and manage virtualenvs.</li> <li>direnv to manage <code>PYTHON_PATH</code> and virtual-env activation/deactivation (with a cool twist for this to happen automagically, see below under <code>Direnv Configuration</code>).</li> <li>ruff to manage almost all source code quality checks (either directly in justfile or pre-commit).</li> <li>just instead of Makefile arcanity.</li> </ul>","tags":["python"]},{"location":"posts/tech/python/#python-version-confirmation-with-pyenv","title":"Python Version Confirmation (with pyenv)","text":"<pre><code># Confirm version of python to use\npyenv versions\n\n# To list those /available/ to install:\n# pyenv install --list\n\n# If we want *do* want to update, bring it down and set it as the global version\n# (this is how we ensure that the version of on \"python -m venv .venv\" below uses this version)\n# pyenv install a.b.c\n# pyenv global  a.b.c\n#\n# Often, we'll have to upgrade pip as well (even though we use Poetry for our projects)\n# pip install --upgrade pip\n</code></pre>","tags":["python"]},{"location":"posts/tech/python/#setup-poetry","title":"Setup (poetry)","text":"<pre><code># change to directory 1 level up from new project area..\ncd ~/Repository/10-19 Development/10 Development\n\n# create project..\npoetry new &lt;projectname&gt;\n\n# (also `poetry init` for existing projects ;-)\n\n# (we don't need poetry managing our venv's for us thank you very much ;-)\npoetry config virtualenvs.create false\n\n# if we plan on doing any package publishing or if we reinstalled\n# poetry, setup our testpypi environment. first, where will we *push*\n# test packages to testpypi:\n# poetry config repositories.testpypi https://test.pypi.org/legacy/\n\n# now, where will test installs from testpypi:\n# poetry config repositories.test https://test.pypi.org/simple/\n\ncd &lt;projectname&gt;\n</code></pre>","tags":["python"]},{"location":"posts/tech/python/#virtual-environment-creation-python-m-venv","title":"Virtual Environment Creation (python -m venv)","text":"<p>Venv precepts I am manic about are:</p> <ul> <li>ALL virtualenvs are at the top-level of the respective project (same level as <code>.github</code>).</li> <li>ALL virtualenvs are named <code>.venv</code>.</li> </ul> <pre><code># create venv (i.e. create a venv right here in the local directory called \".venv\")\npython -m venv --without-pip .venv\n</code></pre>","tags":["python"]},{"location":"posts/tech/python/#direnv-configuration","title":"Direnv Configuration","text":"<p>Make venv startups essentially automatic:</p> <p>Cut/paste to .envrc at project's top level dir:</p> <pre><code>export PYTHONPATH=`pwd`\nexport VIRTUAL_ENV=$PYTHONPATH/.venv\nPATH_add \"$VIRTUAL_ENV/bin\"\n</code></pre> <p>Followed by:</p> <pre><code>% direnv allow\n</code></pre> <p>Reference: Activate Python VirtualEnv Automatically with Direnv</p>","tags":["python"]},{"location":"posts/tech/python/#packages","title":"Packages","text":"<pre><code>###########################################################\n# add packages relevant to all environments (ie. dev *and* production)\n###########################################################\n# add those relevant to all environments (ie. dev *and* production), e.g. loguru?\npoetry add ...\n\n##########################################################\n# add dev-environment-only packages\n##########################################################\n# pre-commit code quality checks\npoetry add pre-commit --group dev\n...\n\n# We don't need to add ruff/ruff-lsp anymore (unless we want to use pre-commit as well)\n# as we have emacs 29+ using ruff-lsp/eglot from a common, pipx installation.\n</code></pre>","tags":["python"]},{"location":"posts/tech/python/#git","title":"Git","text":"<pre><code># setup git repo (needed for pre-commit's git hooks)\ngit init\n\n# ...pull a sample .gitignore file from my most recent project (eg. 10.18 as of now)\n</code></pre> <p>An alternate idea for .gitignore (from a reddit comment) is to turn your gitignore into a \"gitinclude\" (the filename is the same, the usage somewhat different), something like the following:</p> <pre><code># Ignore all root items - this is not recursive!\n/*\n\n# Use the exclamation mark to unignore a folder (and it's subitems) or file\n!src\n!docs\n\n# I like keeping my files separate and below the folders\n!README.md\n!pyproject.toml\n\n# Of course you can still (recursively) ignore anything unneeded\n*.egg-info\n__pycache__\n</code></pre>","tags":["python"]},{"location":"posts/tech/python/#pyprojecttoml-configuration","title":"<code>pyproject.toml</code> Configuration","text":"","tags":["python"]},{"location":"posts/tech/python/#ruff","title":"Ruff","text":"<pre><code>[tool.ruff]\nline-length = 120 # Matches black\ntarget-version = \"py311\"\n\nselect = [\n\"ALL\", # include ALL rules, including *NEW* ones\n]\n\nignore = [\n# modules (order here is from Ruff documentation)\n\"ANN\",  # flake8-annotations (ie. type annotations!)\n\"S\",    # flake8-bandit\n\"BLE\",  # flake8-blind-except\n\"FBT\",  # flake8-boolean-trap\n\"A\",    # flake8-builtins (NO! We use \"id\" as an attribute, sue me...)\n\"EM\",   # flake8-errmsg\n\"ISC\",  # flake8-implicit-str-concat\n\"ICN\",  # flake8-import-conventions\n\"T20\",  # flake8-print (NO! Removes all print statements!!)\n\"PT\",   # flake8-pytest-style\n\"RET\",  # flake8-return\n\"SIM\",  # flake8-simplify\n\"TID\",  # flake8-tidy-imports\n\"ARG\",  # flake8-unused-arguments\n\"DTZ\",  # flake8-datetimez\n\"ERA\",  # eradicate\n\"PD\",   # pandas-vet\n\"PGH\",  # pygrep-hooks\n\"PIE\",  # flake8-pie\n\n# specific rules\n\"D100\"    , # No abide 'Missing docstring in public module'   message, sue me.\n\"D102\"    , # No abide 'Missing docstring in public method'   \"\n\"D101\"    , # No abide 'Missing docstring in public class'    \"\n\"D103\"    , # No abide 'Missing docstring in public function' \"\n\"D104\"    , # No abide 'Missing docstring in public package'  \"\n\"D105\"    , # No abide 'Missing docstring in magic method'    \"\n\"D107\"    , # No abide 'Missing docstring in __init__ method' \"\n\"D211\"    , # Get rid of conflict with D203\n\"D213\"    , # Get rid of conflict with D212 (leaving D212)\n\"E402\"    , # Get rid of message about imports not being at the top (need for flask blueprints)\n\"F401\"    , # Allows for imports without use (e.g. __init__.py)\n# \"I001\"    ,  # Driving me crazy!!! (Imports out of order and/or unsorted!)\n# \"PLW0603\" ,  # Allows for the few places we use Globals (2 in DB and 1 in Channels and 1 in query)\n]\n\n[tool.ruff.per-file-ignores]\n\"config.py\" = [\n\"N802\",  # We want all Config properties to be uppercase (even if from a method)\n\"N805\",  # We have classmethods defined that use 'cls' as arg, not 'self'!\n]\n\n[tool.ruff.mccabe]\nmax-complexity = 12  # Might be a bit too aggressive but start here and then only increase as absolutely necessary.\n</code></pre>","tags":["python"]},{"location":"posts/tech/python/#black-optional","title":"Black (optional)","text":"<pre><code>[tool.black]\nline-length = 120\ntarget-version = ['py311',]\ninclude = '\\.pyi?$'\nfast = true\nexclude = '''\n(\n      \\.eggs         # exclude a few common directories in the\n    | \\.git          # root of the project\n    | \\.mypy_cache\n    | \\.pytest_cache\n    | \\.tox\n    | \\.venv\n    | _vm\n    | python-venv\n    | dist\n    | build\n    | _build\n)\n'''\n</code></pre>","tags":["python"]},{"location":"posts/tech/python/#isort-optional","title":"iSort (optional)","text":"<pre><code>[tool.isort]\nprofile = \"black\"\nskip = [\".venv\"]\n</code></pre>","tags":["python"]},{"location":"posts/tech/python/#precommit-optional","title":"PreCommit (optional)","text":"<p>From a reddit thread:</p> <ul> <li>I've also found that ssort is useful in larger codebases. My workflow is: black -&gt; isort -&gt; ssort -&gt; ruff -&gt; mypy -&gt; pytest</li> <li>If all of those pass, then the pre-commit hooks allow for a commit and pull-request.</li> </ul> <p>Good article on setting up pre-commit -&gt; Improve your Django Code with pre-commit.</p> <pre><code>pre-commit install\ngit add .pre-commit-config.yaml\npre-commit run --all-files  # optional (to test pre-commit)\n\n############################################################\n# Note: the previous 3 lines could be put into justfile as\n# well, see raindroppy's justfile for an example.\n############################################################\n# To update the pre-commit configuration file to the most\n# recent tag/revision available for each tool:\npre-commit autoupdate [--repo https://github.com/psf/black] [--repo another done]...\n# (do not forget to pre-commit install and then git add afterwards!)\n\n############################################################\n# Copy over code formatting configuration and setup pre-commit\n# code cleansing (if necessary)\n############################################################\ncp ~/repository/10-19 development/10 development/.pre-commit-config.yaml .\n</code></pre>","tags":["python"]},{"location":"posts/tech/python/#background-links-and-how-to","title":"Background, Links and How-To","text":"","tags":["python"]},{"location":"posts/tech/python/#python-version-management-aka-pyenv","title":"Python Version Management aka pyenv","text":"<ul> <li>Managing multiple python versions with pyenv \u2013 real python (great overview and tips!)</li> <li>Customizing pyenv behavior with hooks</li> <li>Just use pyenv, stop using other package managers for python | by daryan hans\u2026</li> <li>pyenv (good intro to pyenv)</li> <li>pyenv-virtualenv</li> </ul>","tags":["python"]},{"location":"posts/tech/python/#package-management-aka-poetry","title":"Package Management aka poetry","text":"<ul> <li>Good poetry cheat sheet</li> <li>Dependency management with python poetry (good overview article (with most commands listed))</li> <li>Trigger article (poetry, github actions, pytest)</li> <li>Good overall from scratch with pyenv, pyenv-virtualenv and poetry</li> <li>Jacob Kaplan Moss's 2020 setup (pyenv, pipx and poetry)</li> <li>Poetry and direnv (small integration layer between the 2)</li> <li> <p>Full direnv configuration wiki page/documentation</p> </li> <li> <p>Package creation &amp; deployment</p> <ul> <li>episode #137: start using a build system &amp; continuous integration in python</li> <li>Brenton Cleeland - An open source Python project CI pipeline</li> <li>Using python-poetry to publish to test.pypi.org - stack overflow</li> <li>Publishing a package to pypi with poetry \u2014 ian wootten</li> <li>Automating pypi releases using poetry and github actions \u2014 ian wootten</li> </ul> </li> <li> <p>How to install from testpypi with poetry (reference so)</p> <ol> <li> <p>Make sure config entry for \"test\" is in <code>~poetry config --list~</code>.</p> </li> <li> <p>cd to the top level directory and <code>~poetry new &lt;testprojname&gt;~</code>.</p> </li> <li> <p><code>~cd &lt;testprojname&gt;~</code>; <code>~python -m venv .env~</code>; <code>~activate~</code>.</p> </li> <li> <p>Add the following stanza to the <code>pyproject.toml</code> file:</p> <pre><code>[tool.poetry.source]\nname = \"test\"\nurl = \"https://test.pypi.org/simple/\"\nsecondary = true\n</code></pre> <p>[note that the name &amp; url match that within the <code>~poetry config --list~</code> environment!]</p> </li> <li> <p>Now, we can: <code>~poetry add &lt;package&gt; --source test~</code>.</p> </li> </ol> </li> <li> <p>Reference</p> <ul> <li>documenting python projects with sphinx and read the docs \u2013 real python (2023-01-06 Fri&gt;)</li> </ul> </li> </ul>","tags":["python"]},{"location":"posts/tech/python/#package-distribution-tovia-pypi","title":"Package Distribution to/via PyPi","text":"<p>Specifically, how to publish our build to TestPyPi (args: \u2013dry-run for example)</p> <pre><code>set -x PYPI_TEST_USERNAME &lt;token&gt;\nset -x PYPI_TEST_PASSWORD &lt;api_token_from_testpypi&gt;\n\npoetry config repositories.testpypi https://test.pypi.org/legacy/\npoetry publish --repository testpypi --username $PYPI_TEST_USERNAME --password $PYPI_TEST_PASSWORD {{args}}\n\n# NOTE: To pip install _from_ TestPyPi and get the right packages, we need to add regular pypi as a supplemental\n#       as the overwhelming majority of other required packages will NOT be available on TestPyPi.\n# Ref : https://stackoverflow.com/questions/57405014/how-to-fix-no-matching-distribution-found-for-package-name-when-installing-o\npip install -i https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple &lt;ourPackage&gt;\n</code></pre>","tags":["python"]},{"location":"posts/tech/python/#other-peoples-approaches","title":"Other People's Approaches","text":"<ol> <li> <p>Cookiecutter-poetry</p> <p>This is a cookiecutter repository to generate the file structure for a python project that uses poetry for its dependency management.</p> </li> <li> <p>References and other examples</p> <ul> <li>An opinionated Python boilerplate - Duarte O.Carmo</li> <li>My Goldilocks Python Setup. A solution that\u2019s just right for\u2026 | by David Amos\u2026</li> <li>How I start every new Python backend API project</li> </ul> </li> <li> <p>Setting up python projects (detailed!)</p> <ul> <li>Setting up python projects: part i (git, python environment, ide etc.)</li> <li>Setting up python projects: part ii (formatting, linting, command management with makefiles, ci, etc.)</li> <li>Setting up python projects: part iii (testing)</li> <li>Setting up python projects: part iv (documentation, ci/cd)</li> </ul> </li> <li> <p>If installing pycurl, also execute the following (assuming fish shell)</p> <pre><code>set -gx ldflags  -l/usr/local/opt/openssl/lib\nset -gx cppflags -i/usr/local/opt/openssl/include\n</code></pre> </li> </ol>","tags":["python"]},{"location":"misc/tags/","title":"Tags","text":""},{"location":"misc/tags/#bayesian","title":"bayesian","text":"<ul> <li>Meta-Knowledge</li> </ul>"},{"location":"misc/tags/#bonds","title":"bonds","text":"<ul> <li>Long Term Investing</li> </ul>"},{"location":"misc/tags/#economics","title":"economics","text":"<ul> <li>Accrual vs Cash</li> </ul>"},{"location":"misc/tags/#emacs","title":"emacs","text":"<ul> <li>My Emacs Configuration</li> </ul>"},{"location":"misc/tags/#government","title":"government","text":"<ul> <li>Accrual vs Cash</li> </ul>"},{"location":"misc/tags/#history","title":"history","text":"<ul> <li>Meta-Knowledge</li> </ul>"},{"location":"misc/tags/#just","title":"just","text":"<ul> <li>Just vs Makefiles</li> </ul>"},{"location":"misc/tags/#knowledge","title":"knowledge","text":"<ul> <li>Meta-Knowledge</li> </ul>"},{"location":"misc/tags/#make","title":"make","text":"<ul> <li>Just vs Makefiles</li> </ul>"},{"location":"misc/tags/#mutual-funds","title":"mutual funds","text":"<ul> <li>Long Term Investing</li> </ul>"},{"location":"misc/tags/#projects","title":"projects","text":"<ul> <li>Long Term Investing</li> </ul>"},{"location":"misc/tags/#python","title":"python","text":"<ul> <li>My Python Environment</li> </ul>"},{"location":"misc/tags/#retirement","title":"retirement","text":"<ul> <li>Long Term Investing</li> </ul>"},{"location":"misc/tags/#risk","title":"risk","text":"<ul> <li>Long Term Investing</li> </ul>"},{"location":"misc/tags/#risk-management","title":"risk management","text":"<ul> <li>New on New</li> </ul>"},{"location":"misc/tags/#stocks","title":"stocks","text":"<ul> <li>Long Term Investing</li> </ul>"}]}